project:
  env: '@PROJECT_ENV@'
spring:
  data:
    redis:
      host: '@REDIS_HOST@'
      port: '@REDIS_CUSTOM_PORT@'
      password: '@REDIS_PASSWORD@'
      database: 0
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
        shutdown-timeout: 100ms
  session:
    store-type: redis
    redis:
      namespace: tymb:sessions



  profiles:
    active: '@env@'
  security:
    oauth2:
      resourceserver:
        jwt:
            issuer-uri: '@KEYCLOAK_AUTH_SERVER_URL@/realms/@KEYCLOAK_REALM@'
            jwk-set-uri: '@KEYCLOAK_AUTH_SERVER_URL@/realms/@KEYCLOAK_REALM@/protocol/openid-connect/certs'
  datasource:
    driver-class-name: org.postgresql.Driver
    url: '@SPRING_DATASOURCE_URL@'
    username: '@SPRING_DATASOURCE_USERNAME@'
    password: '@SPRING_DATASOURCE_PASSWORD@'
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      pool-name: HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      leak-detection-threshold: 120000
      validation-timeout: 5000
      connection-test-query: SELECT 1
      auto-commit: false
      register-mbeans: true
  # People datasource configuration
  people-datasource:
    driver-class-name: org.postgresql.Driver
    url: '@PEOPLE_DATASOURCE_URL@'
    username: '@PEOPLE_DATASOURCE_USERNAME@'
    password: '@PEOPLE_DATASOURCE_PASSWORD@'
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      pool-name: PeopleHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      leak-detection-threshold: 120000
      validation-timeout: 5000
      connection-test-query: SELECT 1
      auto-commit: false
      register-mbeans: true

# 定時任務配置
scheduling:
  tasks:
    # 數據清理任務 - 每天凌晨2點執行
    cleanup:
      cron: "0 0 2 * * ?"
      lock-timeout: 30 # 分鐘
    # 週報表生成 - 每週日凌晨3點執行
    weekly-report:
      cron: "0 0 3 ? * SUN"
      lock-timeout: 60 # 分鐘
    # 數據備份 - 每天凌晨4點執行
    backup:
      cron: "0 0 4 * * ?"
      lock-timeout: 120 # 分鐘
    # 健康檢查 - 每小時執行一次
    health-check:
      cron: "0 0 * * * ?"
      lock-timeout: 5 # 分鐘
    # 度量數據導出 - 每30秒執行一次
    metrics-export:
      fixed-rate: 30000 # 毫秒
      lock-timeout: 25 # 秒

# 分布式鎖配置
distributed-lock:
  # 內容保存鎖超時時間（秒）
  content-save-timeout: 30
  # 畜牧業數據查詢鎖超時時間（秒）
  livestock-query-timeout: 10
  # 畜牧業數據保存鎖超時時間（秒）
  livestock-save-timeout: 30

# 應用程序配置
app:
  # Session 配置 - 混合認證策略
  session:
    enabled: true  # 啟用 Session 支持
    timeout: 3600  # Session 超時時間（秒）
  # 後端URL配置
  url:
    address: '@URL_ADDRESS@'
  # 文件上傳配置
  file:
    upload:
      max-size: 10MB
      allowed-types: jpg,jpeg,png,gif,pdf,doc,docx
  # 日誌配置
  logging:
    level:
      tw.com.tymbackend: INFO
      org.springframework.security: DEBUG
      org.springframework.web: DEBUG
  jpa:
    open-in-view: false
    properties:
      hibernate:
        connection:
          provider_disables_autocommit: true
  main:
    allow-bean-definition-overriding: true
    web-application-type: servlet
  devtools:
    restart:
      enabled: false
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

logging:
  level:
    root: INFO
    org:
      springframework: INFO
      hibernate:
        SQL: OFF
        type:
          descriptor:
            sql: OFF
    '[io.micrometer]': INFO

server:
  port: 8080
  servlet:
    context-path: /tymb
  tomcat:
    connection-timeout: 20000
    max-http-form-post-size: 3145728
  error:
    whitelabel:
      enabled: true
  max-http-request-header-size: 3145728
  ssl:
    enabled: false

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,metrics,prometheus,info,loggers,env
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name:tym-backend}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 400ms
    enable:
      jvm: true
      process: true
      system: true
      logback: true
      tomcat: true
      jdbc: true
      hikaricp: true
      http: true
      jms: true
      kafka: true
      mongodb: true
      redis: true
      rabbit: true
      cache: true
      hibernate: true

keycloak:
  auth-server-url: '@KEYCLOAK_AUTH_SERVER_URL@'
  realm: '@KEYCLOAK_REALM@'
  clientId: '@KEYCLOAK_CLIENT_ID@'
  public-client: false
  cors: true
  credentials:
    secret: '@KEYCLOAK_CREDENTIALS_SECRET@'
  bearer-only: true
  security-constraints:
    - authRoles: default-roles-peoplesystem
      securityCollections:
        - patterns:
            - /*
