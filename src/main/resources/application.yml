project:
  env: '@PROJECT_ENV@'
spring:
  data:
    redis:
      host: '@REDIS_HOST@'
      port: '@REDIS_CUSTOM_PORT@'
      password: '@REDIS_PASSWORD@'
      database: 0
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
        shutdown-timeout: 100ms
  session:
    store-type: redis
    redis:
      namespace: tymb:sessions

  profiles:
    active: '@env@'
  security:
    oauth2:
      resourceserver:
        jwt:
            issuer-uri: '@KEYCLOAK_AUTH_SERVER_URL@/realms/@KEYCLOAK_REALM@'
            jwk-set-uri: '@KEYCLOAK_AUTH_SERVER_URL@/realms/@KEYCLOAK_REALM@/protocol/openid-connect/certs'
  datasource:
    driver-class-name: org.postgresql.Driver
    url: '@SPRING_DATASOURCE_URL@'
    username: '@SPRING_DATASOURCE_USERNAME@'
    password: '@SPRING_DATASOURCE_PASSWORD@'
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      pool-name: HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      leak-detection-threshold: 120000
      validation-timeout: 5000
      connection-test-query: SELECT 1
      auto-commit: false
      register-mbeans: true
  # People datasource configuration
  people-datasource:
    driver-class-name: org.postgresql.Driver
    url: '@SPRING_PEOPLE_DATASOURCE_URL@'
    username: '@SPRING_PEOPLE_DATASOURCE_USERNAME@'
    password: '@SPRING_PEOPLE_DATASOURCE_PASSWORD@'
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 300000
      pool-name: PeopleHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      leak-detection-threshold: 120000
      validation-timeout: 5000
      connection-test-query: SELECT 1
      auto-commit: false
      register-mbeans: true
  jpa:
    open-in-view: false
    properties:
      hibernate:
        connection:
          provider_disables_autocommit: true
  main:
    allow-bean-definition-overriding: true
    web-application-type: servlet
  devtools:
    restart:
      enabled: false
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

logging:
  level:
    root: INFO
    org:
      springframework: INFO
      hibernate:
        SQL: OFF
        type:
          descriptor:
            sql: OFF
    '[io.micrometer]': INFO

server:
  port: 8080
  servlet:
    context-path: /tymb
  tomcat:
    connection-timeout: 20000
    max-http-form-post-size: 3145728
  error:
    whitelabel:
      enabled: true
  max-http-request-header-size: 3145728
  ssl:
    enabled: false

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,metrics,prometheus,info,loggers,env
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name:tym-backend}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 400ms
    enable:
      jvm: true
      process: true
      system: true
      logback: true
      tomcat: true
      jdbc: true
      hikaricp: true
      http: true
      jms: true
      kafka: true
      mongodb: true
      redis: true
      rabbit: true
      cache: true
      hibernate: true

keycloak:
  auth-server-url: '@KEYCLOAK_AUTH_SERVER_URL@'
  realm: '@KEYCLOAK_REALM@'
  clientId: '@KEYCLOAK_CLIENT_ID@'
  public-client: false
  cors: true
  credentials:
    secret: '@KEYCLOAK_CREDENTIALS_SECRET@'
  bearer-only: true
  security-constraints:
    - authRoles: default-roles-peoplesystem
      securityCollections:
        - patterns:
            - /*
url:
  address: '@URL_ADDRESS@'
  frontend: '@URL_FRONTEND@'